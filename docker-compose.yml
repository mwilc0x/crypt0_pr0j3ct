version: '3.3'

services:

  ###############
  ### ssr-app ###
  ###############
  ssr-app:
    container_name: website
    restart: unless-stopped
    build: ./packages/nft-market/app
    env_file:
      - ./packages/nft-market/app/.env

  ##############
  ### fe-api ###
  ##############
  fe-api:
    container_name: frontend-api
    restart: unless-stopped
    build: ./packages/nft-market/fe-server
    env_file:
      - ./packages/nft-market/fe-server/.env
    depends_on:
      - fedb
    links:
      - fedb

  ##################
  ### image-api ####
  ##################
  image-api:
    container_name: image-api
    restart: unless-stopped
    build: ./packages/nft-market/img-api-server
    env_file:
      - ./packages/nft-market/img-api-server/.env
    depends_on:
      - imgdb
    links:
      - imgdb

  ########################
  ### web server mysql ###
  ########################
  fedb:
    container_name: frontend-db
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${WEB_SERVER_MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${WEB_SERVER_MYSQL_USER}
      MYSQL_PASSWORD: ${WEB_SERVER_MYSQL_PASSWORD}
      MYSQL_DATABASE: ${WEB_SERVER_MYSQL_DATABASE}
    ports:
      - '3307:3307'
    volumes:
      - ./mysql/fe_db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - fedb:/var/lib/fedb

  #######################
  ### image api mysql ###
  #######################
  imgdb:
    container_name: image-db
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${IMAGE_API_MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${IMAGE_API_MYSQL_USER}
      MYSQL_PASSWORD: ${IMAGE_API_MYSQL_PASSWORD}
      MYSQL_DATABASE: ${IMAGE_API_MYSQL_DATABASE}
    ports:
      - '3308:3308'
    volumes:
      - ./mysql/img_db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - imgdb:/var/lib/imgdb

  ################
  ### sol-api ####
  ################
  solana-api:
    container_name: solana-api-server
    restart: unless-stopped
    build: ./packages/nft-market/sol-api-server
    env_file:
      - ./packages/nft-market/sol-api-server/.env
    depends_on:
      - soldb
      - soldb-redis
    links:
      - soldb
      - soldb-redis

  #######################
  ### sol-api-client ####
  #######################
  solana-api-client:
    container_name: solana-api-client
    restart: unless-stopped
    build: ./packages/nft-market/sol-api-client
    env_file:
      - ./packages/nft-market/sol-api-client/.env
    depends_on:
      - rabbitmq
      - solana-api

  ######################
  ### email-service ####
  ######################
  email-service:
    container_name: email-service
    restart: unless-stopped
    build: ./packages/nft-market/email-service
    env_file:
      - ./packages/nft-market/email-service/.env
    depends_on:
      - rabbitmq

  ########################
  ### solana api mysql ###
  ########################
  soldb:
    container_name: solana-api-db
    build: ./mysql/sol_db
    # restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${SOLANA_API_MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${SOLANA_API_MYSQL_USER}
      MYSQL_PASSWORD: ${SOLANA_API_MYSQL_PASSWORD}
      MYSQL_DATABASE: ${SOLANA_API_MYSQL_DATABASE}
      GH_ACTION_RUNNER_ACCESS_TOKEN: ${GH_ACTION_RUNNER_ACCESS_TOKEN}
    ports:
      - '3309:3309'
    volumes:
      - ./mysql/sol_db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - soldb:/var/lib/soldb

  #########################
  ### sol-api-postgres ####
  #########################
  solana-api-postgres:
    container_name: solana-api-postgres
    image: postgres:14.3-bullseye
    restart: always
    env_file:
      - ./postgres/sol_api_userdb/.env
    ports:
      - '5432:5432'
    volumes:
      - ./postgres/sol_api_userdb/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - sol-api-postgres:/var/lib/postgres/data

  #######################
  ### solana db redis ###
  #######################
  soldb-redis:
    container_name: solana-db-redis
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    environment:
      SOLDB_REDIS_PASSWORD: ${SOLDB_REDIS_PASSWORD}
    command: redis-server --save 20 1 --loglevel warning --requirepass ${SOLDB_REDIS_PASSWORD}
    volumes: 
      - soldb-redis:/data

  ############################
  ### soldb actions runner ###
  ############################
  actions-soldb:
    container_name: actions-solana-db
    build: ./actions/soldb
    # restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${SOLANA_API_MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${SOLANA_API_MYSQL_USER}
      MYSQL_PASSWORD: ${SOLANA_API_MYSQL_PASSWORD}
      MYSQL_DATABASE: ${SOLANA_API_MYSQL_DATABASE}
      MYSQL_HOST: ${SOLANA_API_MYSQL_HOST}
      MYSQL_PORT: ${SOLANA_API_MYSQL_PORT}
      GH_ACTION_RUNNER_ACCESS_TOKEN: ${GH_ACTION_RUNNER_ACCESS_TOKEN}
      GH_PERSONAL_ACCESS_TOKEN: ${GH_PERSONAL_ACCESS_TOKEN}
    depends_on:
      - soldb
    links:
      - soldb

  #################
  ### rabbit mq ###
  #################
  rabbitmq:
    hostname: rabbitmq
    container_name: rabbitmq
    image: rabbitmq:management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_HOST: ${RABBITMQ_DEFAULT_HOST}
    ports:
      # AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'

  #############
  ### nginx ###
  #############
  proxy:
    container_name: nginx-main
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./nginx.default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - ssr-app
      - fe-api
      - image-api
      - solana-api

  certbot:
    container_name: certbot-main
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  test:
    driver: local
  imgdb:
    driver: local
  fedb:
    driver: local
  soldb:
    driver: local
  soldb-redis:
    driver: local
  sol-api-postgres:
    driver: local
